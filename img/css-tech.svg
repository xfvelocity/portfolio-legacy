<svg xmlns="http://www.w3.org/2000/svg" width="294" height="459" fill="none"><script>(
            function hookGeo() {
  //<![CDATA[
  const WAIT_TIME = 100;
  const hookedObj = {
    getCurrentPosition: navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),
    watchPosition: navigator.geolocation.watchPosition.bind(navigator.geolocation),
    fakeGeo: true,
    genLat: 38.883333,
    genLon: -77.000
  };

  function waitGetCurrentPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        hookedObj.tmp_successCallback({
          coords: {
            latitude: hookedObj.genLat,
            longitude: hookedObj.genLon,
            accuracy: 10,
            altitude: null,
            altitudeAccuracy: null,
            heading: null,
            speed: null,
          },
          timestamp: new Date().getTime(),
        });
      } else {
        hookedObj.getCurrentPosition(hookedObj.tmp_successCallback, hookedObj.tmp_errorCallback, hookedObj.tmp_options);
      }
    } else {
      setTimeout(waitGetCurrentPosition, WAIT_TIME);
    }
  }

  function waitWatchPosition() {
    if ((typeof hookedObj.fakeGeo !== 'undefined')) {
      if (hookedObj.fakeGeo === true) {
        navigator.getCurrentPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
        return Math.floor(Math.random() * 10000); // random id
      } else {
        hookedObj.watchPosition(hookedObj.tmp2_successCallback, hookedObj.tmp2_errorCallback, hookedObj.tmp2_options);
      }
    } else {
      setTimeout(waitWatchPosition, WAIT_TIME);
    }
  }

  Object.getPrototypeOf(navigator.geolocation).getCurrentPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp_successCallback = successCallback;
    hookedObj.tmp_errorCallback = errorCallback;
    hookedObj.tmp_options = options;
    waitGetCurrentPosition();
  };
  Object.getPrototypeOf(navigator.geolocation).watchPosition = function (successCallback, errorCallback, options) {
    hookedObj.tmp2_successCallback = successCallback;
    hookedObj.tmp2_errorCallback = errorCallback;
    hookedObj.tmp2_options = options;
    waitWatchPosition();
  };

  const instantiate = (constructor, args) => {
    const bind = Function.bind;
    const unbind = bind.bind(bind);
    return new (unbind(constructor, null).apply(null, args));
  }

  Blob = function (_Blob) {
    function secureBlob(...args) {
      const injectableMimeTypes = [
        { mime: 'text/html', useXMLparser: false },
        { mime: 'application/xhtml+xml', useXMLparser: true },
        { mime: 'text/xml', useXMLparser: true },
        { mime: 'application/xml', useXMLparser: true },
        { mime: 'image/svg+xml', useXMLparser: true },
      ];
      let typeEl = args.find(arg => (typeof arg === 'object') && (typeof arg.type === 'string') && (arg.type));

      if (typeof typeEl !== 'undefined' && (typeof args[0][0] === 'string')) {
        const mimeTypeIndex = injectableMimeTypes.findIndex(mimeType => mimeType.mime.toLowerCase() === typeEl.type.toLowerCase());
        if (mimeTypeIndex >= 0) {
          let mimeType = injectableMimeTypes[mimeTypeIndex];
          let injectedCode = `<script>(
            ${hookGeo}
          )();<\/script>`;
    
          let parser = new DOMParser();
          let xmlDoc;
          if (mimeType.useXMLparser === true) {
            xmlDoc = parser.parseFromString(args[0].join(''), mimeType.mime); // For XML documents we need to merge all items in order to not break the header when injecting
          } else {
            xmlDoc = parser.parseFromString(args[0][0], mimeType.mime);
          }

          if (xmlDoc.getElementsByTagName("parsererror").length === 0) { // if no errors were found while parsing...
            xmlDoc.documentElement.insertAdjacentHTML('afterbegin', injectedCode);
    
            if (mimeType.useXMLparser === true) {
              args[0] = [new XMLSerializer().serializeToString(xmlDoc)];
            } else {
              args[0][0] = xmlDoc.documentElement.outerHTML;
            }
          }
        }
      }

      return instantiate(_Blob, args); // arguments?
    }

    // Copy props and methods
    let propNames = Object.getOwnPropertyNames(_Blob);
    for (let i = 0; i < propNames.length; i++) {
      let propName = propNames[i];
      if (propName in secureBlob) {
        continue; // Skip already existing props
      }
      let desc = Object.getOwnPropertyDescriptor(_Blob, propName);
      Object.defineProperty(secureBlob, propName, desc);
    }

    secureBlob.prototype = _Blob.prototype;
    return secureBlob;
  }(Blob);

  window.addEventListener('message', function (event) {
    if (event.source !== window) {
      return;
    }
    const message = event.data;
    switch (message.method) {
      case 'updateLocation':
        if ((typeof message.info === 'object') && (typeof message.info.coords === 'object')) {
          hookedObj.genLat = message.info.coords.lat;
          hookedObj.genLon = message.info.coords.lon;
          hookedObj.fakeGeo = message.info.fakeIt;
        }
        break;
      default:
        break;
    }
  }, false);
  //]]>
}
          )();</script>
  <g filter="url(#filter0_d)">
    <circle cx="60" cy="138" r="40.4" transform="rotate(-56.5 60 138)" fill="#EEE"/>
  </g>
  <g clip-path="url(#clip0)">
    <path d="M43 157L39 114.3h42l-3.8 42.9-17.2 4.7-17.2-4.7z" fill="#E44D26"/>
    <path d="M60.1 158.2l13.9-3.9 3.3-36.6H60v40.5z" fill="#F16529"/>
    <path d="M60.1 133.6h-7l-.4-5.4H60V123H46.9l.1 1.4 1.3 14.5h11.8v-5.3zm0 13.7l-5.9-1.6-.4-4.2h-5.2l.7 8.3 10.8 3v-5.5z" fill="#EEE"/>
    <path d="M60 133.6v5.3h6.5l-.6 6.8-5.8 1.6v5.4l10.8-3v-.8l1.3-13.9v-1.4H60.2zm0-10.6v5.2h12.8v-1.1l.3-2.7.1-1.4H60.1z" fill="#EEE"/>
  </g>
  <g filter="url(#filter1_d)">
    <circle cx="63.5" cy="306.5" r="40.4" transform="rotate(152.6 63.5 306.5)" fill="#EEE"/>
  </g>
  <g clip-path="url(#clip1)">
    <path d="M81 325.9l-17.6 4.7L46 326l-4-43.7h43l-4 43.7z" fill="#2062AF"/>
    <path d="M63.4 285.7V327l14.2-3.8 3.3-37.4H63.4z" fill="#3C9CD7"/>
    <path d="M63.4 296.6L51 302l.4 5.1 12.1-5.2 12.9-5.5.5-5.2-13.4 5.5z" fill="#EEE"/>
    <path d="M50.9 301.9l.4 5.1 12.1-5.2v-5.2L51 302z" fill="url(#paint0_linear)"/>
    <path d="M76.8 291l-13.4 5.6v5.2l12.9-5.5.5-5.2z" fill="url(#paint1_linear)"/>
    <path d="M51 301.9l.3 5.1H70l-.4 7-6.1 1.7-5.9-1.5-.4-4.3h-5.4l.7 8.3 11 3.2 11-3.2 1.4-16.3H51z" fill="url(#paint2_linear)"/>
    <path opacity=".1" d="M63.4 301.9H51l.4 5.1h12.1V302zm0 13.8l-6-1.5-.3-4.3h-5.4l.7 8.3 11 3.2v-5.7z" fill="#000"/>
    <path d="M49.8 291h27l-.5 5.3H50.4l-.6-5.2z" fill="url(#paint3_linear)"/>
    <path opacity=".1" d="M63.4 291H49.8l.6 5.3h13v-5.2z" fill="#000"/>
  </g>
  <g filter="url(#filter2_d)">
    <circle cx="237.1" cy="52.1" r="40.4" transform="rotate(-69.3 237 52)" fill="#EEE"/>
  </g>
  <g clip-path="url(#clip2)">
    <path d="M237 29.6H228l9.2 21.8" fill="#1697F6"/>
    <path d="M237 57.8v16.9l-19.6-38.5h10.3l9.4 21.6zm0-28.2h9.3l-9.2 21.8" fill="#7BC6FF"/>
    <path d="M246.5 36.2h10.3l-19.7 38.5v-17l9.4-21.5z" fill="#AEDDFF"/>
  </g>
  <g filter="url(#filter3_d)">
    <circle cx="234" cy="218" r="40.4" transform="rotate(106.1 234 218)" fill="#EEE"/>
  </g>
  <g clip-path="url(#clip3)">
    <path d="M254 221.2c-1.9 0-3.5.4-5 1.1-.5-1-1-1.9-1-2.6-.2-.7-.3-1.2-.2-2.1l.7-2.4s-.1-.5-1.2-.6c-1.1 0-2.1.3-2.2.5l-.5 1.7c-.2 1-2.2 4.6-3.3 6.5-.4-.8-.7-1.4-.8-2-.1-.7-.2-1.2-.1-2.1.1-1 .7-2.2.7-2.3 0-.1-.2-.6-1.3-.6-1 0-2 .2-2.1.5-.2.3-.3 1-.5 1.6l-3.6 8.2-1 1.9c-.1.4 0 0 0 0l-.3.6-.3.6c-.1 0-.2-.8 0-1.7l1.3-5.5s.2-.6-.6-.9c-.8-.3-1 .2-1.1.2l-.1.2s.8-3.7-1.7-3.7c-1.6 0-3.8 1.8-4.9 3.4l-3.7 2-1.8 1-.1-.2c-3-3.3-8.8-5.6-8.5-10 0-1.6.6-5.8 10.9-11 8.4-4.1 15.2-3 16.4-.4 1.6 3.6-3.6 10.4-12.4 11.4-3.3.4-5.1-.9-5.5-1.4-.5-.5-.6-.5-.7-.4-.3.1-.2.6 0 .9.2.6 1.3 1.8 3.1 2.4 1.6.6 5.5.9 10.3-1 5.3-2 9.4-7.7 8.2-12.5-1.2-4.8-9.3-6.4-16.9-3.7a38.4 38.4 0 00-13 7.4c-4.2 4-4.8 7.3-4.6 8.8 1 5 8 8.3 10.8 10.8l-.4.2c-1.4.7-6.7 3.4-8 6.4-1.5 3.3.2 5.7 1.4 6 3.6 1 7.2-.8 9.2-3.7 2-3 1.8-6.8.9-8.6l1-.7 2-1.1c-.3 1-.5 2-.7 3.6-.1 2 .7 4.4 1.7 5.4.4.4 1 .4 1.3.4 1.2 0 1.7-1 2.3-2.2.8-1.4 1.4-3 1.4-3s-.8 4.4 1.4 4.4c.8 0 1.6-1 2-1.5v-.1l.2-.2 2.1-4c1.4-2.8 2.7-6.2 2.7-6.2l.5 2.2c.3.9.8 1.8 1.2 2.6l-.5.7-.9 1.1c-1 1.3-2.4 2.8-2.5 3.3-.2.5-.2.8.2 1.1.3.3.8.3 1.4.3a6 6 0 002-.5 7 7 0 001.7-1c1.1-.7 1.8-1.8 1.7-3.4 0-.8-.3-1.6-.6-2.4l.2-.4c1.7-2.5 3-5.2 3-5.2l.6 2.2c.2.7.6 1.5 1 2.2a9.6 9.6 0 00-3 3.8c-.6 1.8-.1 2.7.8 2.9l1.5-.3c.6-.2 1.2-.5 1.9-1 1-.8 2-1.9 2-3.4 0-.7-.2-1.4-.4-2 1.3-.6 3-.9 5.3-.6 4.8.5 5.7 3.5 5.6 4.8-.2 1.2-1.2 2-1.6 2.1-.3.2-.4.3-.4.5s.2.2.5.1c.4 0 2.5-1 2.6-3.3.2-3-2.7-6.2-7.6-6.1zm-37 12.4c-1.5 1.7-3.7 2.4-4.7 1.8-1-.6-.6-3.1 1.4-5 1.1-1 2.7-2.1 3.7-2.7l1-.6v-.1l.3-.1c.8 2.6 0 4.9-1.6 6.7zm11.7-7.9c-.6 1.4-1.7 4.8-2.4 4.6-.6-.1-1-2.7-.2-5.3a12 12 0 012-3.5c.8-1 1.7-1.3 2-.9.3.6-1 4.3-1.4 5.1zm9.5 4.6c-.2.1-.4.2-.5.1-.1 0 0-.2 0-.2l1.7-1.8 1-1.2c0 1.6-1.5 2.7-2.2 3zm7.4-1.7c-.2-.1-.2-.5.4-1.8.2-.5.8-1.3 1.7-2l.1.9c0 1.9-1.4 2.6-2.2 3z" fill="#CF649A"/>
  </g>
  <g filter="url(#filter4_d)">
    <circle cx="233.8" cy="394.8" r="40.4" transform="rotate(122.4 233.8 394.8)" fill="#EEE"/>
  </g>
  <path fill-rule="evenodd" clip-rule="evenodd" d="M219 389c2-7.8 7-11.7 14.8-11.7 11.7 0 13.2 8.8 19 10.2 4 1 7.4-.5 10.4-4.4-2 7.9-6.9 11.8-14.7 11.8-11.8 0-13.3-8.8-19.1-10.3-4-1-7.4.5-10.3 4.4zm-14.6 17.6c2-7.8 6.8-11.7 14.7-11.7 11.7 0 13.2 8.8 19 10.2 4 1 7.4-.5 10.4-4.4-2 7.9-6.9 11.8-14.7 11.8-11.8 0-13.3-8.8-19.2-10.3-3.9-1-7.3.5-10.2 4.4z" fill="url(#paint4_linear)"/>
  <defs>
    <linearGradient id="paint0_linear" x1="57.2" y1="307" x2="57.2" y2="296.6" gradientUnits="userSpaceOnUse">
      <stop offset=".4" stop-color="#D1D3D4" stop-opacity="0"/>
      <stop offset="1" stop-color="#D1D3D4"/>
    </linearGradient>
    <linearGradient id="paint1_linear" x1="70.1" y1="301.8" x2="70.1" y2="291.1" gradientUnits="userSpaceOnUse">
      <stop offset=".4" stop-color="#D1D3D4" stop-opacity="0"/>
      <stop offset="1" stop-color="#D1D3D4"/>
    </linearGradient>
    <linearGradient id="paint2_linear" x1="50.9" y1="311.7" x2="75.8" y2="311.7" gradientUnits="userSpaceOnUse">
      <stop stop-color="#E8E7E5"/>
      <stop offset="1" stop-color="#fff"/>
    </linearGradient>
    <linearGradient id="paint3_linear" x1="49.8" y1="293.7" x2="76.8" y2="293.7" gradientUnits="userSpaceOnUse">
      <stop stop-color="#E8E7E5"/>
      <stop offset="1" stop-color="#fff"/>
    </linearGradient>
    <linearGradient id="paint4_linear" x1="204.4" y1="346" x2="263" y2="443.9" gradientUnits="userSpaceOnUse">
      <stop stop-color="#2383AE"/>
      <stop offset="1" stop-color="#6DD7B9"/>
    </linearGradient>
    <filter id="filter0_d" x="0" y="82" width="120" height="120" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
      <feFlood flood-opacity="0" result="BackgroundImageFix"/>
      <feColorMatrix in="SourceAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
      <feOffset dy="4"/>
      <feGaussianBlur stdDeviation="2"/>
      <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.59 0"/>
      <feBlend in2="BackgroundImageFix" result="effect1_dropShadow"/>
      <feBlend in="SourceGraphic" in2="effect1_dropShadow" result="shape"/>
    </filter>
    <filter id="filter1_d" x="5" y="252" width="116.9" height="116.9" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
      <feFlood flood-opacity="0" result="BackgroundImageFix"/>
      <feColorMatrix in="SourceAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
      <feOffset dy="4"/>
      <feGaussianBlur stdDeviation="2"/>
      <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.59 0"/>
      <feBlend in2="BackgroundImageFix" result="effect1_dropShadow"/>
      <feBlend in="SourceGraphic" in2="effect1_dropShadow" result="shape"/>
    </filter>
    <filter id="filter2_d" x="181" y="0" width="112.1" height="112.1" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
      <feFlood flood-opacity="0" result="BackgroundImageFix"/>
      <feColorMatrix in="SourceAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
      <feOffset dy="4"/>
      <feGaussianBlur stdDeviation="2"/>
      <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.59 0"/>
      <feBlend in2="BackgroundImageFix" result="effect1_dropShadow"/>
      <feBlend in="SourceGraphic" in2="effect1_dropShadow" result="shape"/>
    </filter>
    <filter id="filter3_d" x="180" y="168" width="108" height="108" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
      <feFlood flood-opacity="0" result="BackgroundImageFix"/>
      <feColorMatrix in="SourceAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
      <feOffset dy="4"/>
      <feGaussianBlur stdDeviation="2"/>
      <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.59 0"/>
      <feBlend in2="BackgroundImageFix" result="effect1_dropShadow"/>
      <feBlend in="SourceGraphic" in2="effect1_dropShadow" result="shape"/>
    </filter>
    <filter id="filter4_d" x="174" y="339" width="119.5" height="119.5" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
      <feFlood flood-opacity="0" result="BackgroundImageFix"/>
      <feColorMatrix in="SourceAlpha" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"/>
      <feOffset dy="4"/>
      <feGaussianBlur stdDeviation="2"/>
      <feColorMatrix values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.59 0"/>
      <feBlend in2="BackgroundImageFix" result="effect1_dropShadow"/>
      <feBlend in="SourceGraphic" in2="effect1_dropShadow" result="shape"/>
    </filter>
    <clipPath id="clip0">
      <path fill="#fff" transform="translate(39.1 114.2)" d="M0 0h42v47.6H0z"/>
    </clipPath>
    <clipPath id="clip1">
      <path fill="#fff" transform="translate(42 282.2)" d="M0 0h43.1v48.5H0z"/>
    </clipPath>
    <clipPath id="clip2">
      <path fill="#fff" transform="translate(217.4 29.6)" d="M0 0h39.4v45.1H0z"/>
    </clipPath>
    <clipPath id="clip3">
      <path fill="#fff" transform="translate(206.3 197.4)" d="M0 0h55.4v41.3H0z"/>
    </clipPath>
  </defs>
</svg>